name: CI - Build e Testes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: foodorder_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MIX_ENV: test
      DATABASE_URL: "Host=localhost;Username=postgres;Password=postgres;Database=foodorder_test"

    steps:
      - name: ðŸ“¥ Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Setup .NET 9.0 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: ðŸ§ª Restaurar dependÃªncias
        run: dotnet restore fiap-video-manager/VideoManager.sln

      - name: ðŸ§± Build do projeto
        run: dotnet build Ffiap-video-manager/VideoManager.sln --no-restore --configuration Release

      - name: ðŸ§ª Rodar testes
        run: dotnet test fiap-video-manager/VideoManager.sln --no-build --verbosity normal

  deploy:
    name: Docker Hub Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          # docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/video_manager:latest .
          docker build -t japamanoel/video_manager:latest .

      - name: Push Docker image
        run: |
          # docker push ${{ secrets.DOCKER_HUB_USERNAME }}/video_manager:latest
          docker push japamanoel/video_manager:latest