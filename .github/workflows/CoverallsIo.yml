name: Test and Report Coverage - Coverall.io

on:
  push:
    branches:
      - main
      - feature/coverallls
  pull_request:
    branches:
      - main
      - feature/coverallls
      
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install .NET 6.0 (for Coveralls)
        run: |
          wget https://packages.microsoft.com/config/ubuntu/22.04/prod.list
          sudo mv prod.list /etc/apt/sources.list.d/dotnet-prod.list
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0
          dotnet --version

      - name: ðŸ§ª Restaurar dependÃªncias
        run: dotnet restore VideoManager.sln

      - name: ðŸ§± Build do projeto
        run: dotnet build VideoManager.sln --no-restore 

      - name: Run tests and collect coverage
        run: |
          dotnet test VideoManager.sln \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory VideoManager.Tests/Coverage/XML \
            -p:CollectCoverage=true \
            -p:CoverletOutputFormat=cobertura \
            -p:CoverletOutput=VideoManager.Tests/Coverage/XML/coverage.cobertura.xml \
            -p:Exclude="[xunit.*]*" # Exemplo para excluir assemblies de teste

      - name: Generate HTML Report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator \
            -reports:"VideoManager.Tests/Coverage/XML/*/coverage.cobertura.xml" \
            -targetdir:"VideoManager.Tests/Coverage/Report" \
            -reporttypes:Html

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: VideoManager.Tests/Coverage/XML/*/coverage.cobertura.xml
          verbose: true
