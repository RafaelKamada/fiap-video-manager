services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"            # Porta padrão do LocalStack para todos os serviços
      - "4572:4572"            # Porta para S3
    environment:
      - SERVICES=sqs,s3     # Habilita SQS e S3
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DATA_DIR=/tmp/localstack/data
      - HOSTNAME_EXTERNAL=localstack 
    volumes:
      - ./init-scripts/localstack:/etc/localstack/init/ready.d
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G          
    networks:
      video-manager-network:
        aliases:
        - localstack

  videomanager.api:
    image: japamanoel/video_manager:latest
    container_name: videomanager.api
    # image: ${DOCKER_REGISTRY-}videomanagerapi
    # container_name: videomanager.api
    # build:
    #   context: .
    #   dockerfile: VideoManager.API/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - videomanager.postgres
      - localstack
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - AWS__S3__ServiceURL=http://localstack:4566
      - AWS__S3__BucketName=video-compactor
      - AWS__AccessKey=test
      - AWS__SecretKey=test
      - AWS__Region=us-east-1 
      - Auth__User=VideoCompactor  
      - Auth__Password=$2a$11$8gB/imF7S9k9aAhgLd.DHuCNwOI4EtnTCTTQbar7usvikNDLlCrEu 
      - JwtSettings__Issuer=https://localhost:5001
      - JwtSettings__Audience=https://localhost:5001
      - JwtSettings__Key=d4f8e27b3b1a4c5e8f1d3b7e9c0a2d5f7e6b8c9d0a1b2c3d4e5f6789abcd1234
      - JwtSettings__ExpiryMinutes=60
    user: root  
    command: >
      sh -c "until pg_isready -h postgres -p 5432 -U postgres; do echo 'Aguardando PostgreSQL...'; sleep 2; done &&
      dotnet VideoManager.API.dll"
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
    networks:
      - video-manager-network

  videomanager.postgres:
    image: postgres:latest
    container_name: videomanager.postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=VideoManager
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init-scripts/postgresql:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1.5G
    networks:
      - video-manager-network

volumes:
  localstack_data:
  postgres_data:

networks:
  video-manager-network:
    name: video-manager-network
    driver: bridge